{"version":3,"sources":["ApiConnector.js","components/Chart.js","components/CompanySymbol.js","App.js","index.js"],"names":["cache","setupCache","maxAge","store","localForage","exclude","query","axiosInstance","axios","create","baseURL","adapter","formatStockData","stockData","console","log","dataSet","forEach","item","push","date","open","Number","high","low","close","Chart","props","useState","setStockData","useEffect","symbol","fetchStockData","a","start_date","startDate","end_date","endDate","get","params","result","data","options","axisY","minimum","Math","min","map","maximum","max","crosshair","enabled","snapToDataPoint","axisX","scaleBreaks","spacing","fillOpacity","lineThickness","customBreaks","reduce","breaks","value","index","array","currentDataPointUnix","Date","previousDataPointUnix","oneDayInMs","startValue","endValue","type","dataPoints","x","y","formatDate","dateInput","formatStr","z","M","getMonth","d","getDate","h","getHours","m","getMinutes","s","getSeconds","replace","v","length","slice","getFullYear","toString","CompanySymbol","enteredSymbol","setEnteredSymbol","enteredStartDate","setEnteredStartDate","enteredEndDate","setEnteredEndDate","className","onSubmit","event","preventDefault","onSubmitSymbol","htmlFor","id","placeholder","onChange","target","App","setSymbol","setStartDate","setEndDate","style","display","justifyContent","width","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a4064db8.chunk.js","sourcesContent":["import axios from 'axios';\nimport localForage from 'localforage';\nimport { setupCache } from 'axios-cache-adapter';\n\nconst cache = setupCache({\n    maxAge: 60 * 60 * 1000,\n    store: localForage,\n    exclude: {\n        query: false\n    }\n});\n\nconst axiosInstance = axios.create({\n    baseURL: 'https://data.nasdaq.com/api/v3/datasets/WIKI',\n    adapter: cache.adapter\n});\n\nexport const getDailyChartForSymbol = (symbol,start_date, end_date) => {\n    return axiosInstance.get(`/${symbol}/data.json`, {\n        params: {\n            \"api_key\": 'ocd5DeyxZqbQcqLFDg2Y',\n            \"start_date\": start_date,\n            \"end_date\":  end_date\n        }\n    })\n};\n","import React, { useState, useEffect } from \"react\";\nimport { CanvasJSChart } from \"canvasjs-react-charts\";\nimport { getDailyChartForSymbol } from \"../ApiConnector\";\n\n\nconst Chart = (props) => {\n  const [stockData, setStockData] = useState([]);\n\n  // Fetch daily stock chart for TSLA when the component mounts\n  useEffect(() => {\n    console.log(`Chartjs symbole ${props.symbol}`)\n     // setStockData(formatStockData(initialStockData))\n    const fetchStockData = async () => {\n      const result = await getDailyChartForSymbol(props.symbol, props.startDate,props.endDate);\n      setStockData(formatStockData(result.data[\"dataset_data\"][\"data\"]));\n    };\n    fetchStockData();\n  }, [props.symbol,props.startDate, props.endDate]);\n\n  return (\n    <CanvasJSChart\n      options={{\n        axisY: {\n          // Minimum value is 10% less than the lowest price in the dataset\n          minimum: Math.min(...stockData.map((data) => data.low)) / 1.1,\n          // Minimum value is 10% more than the highest price in the dataset\n          maximum: Math.max(...stockData.map((data) => data.high)) * 1.1,\n          crosshair: {\n            enabled: true,\n            snapToDataPoint: true,\n          },\n        },\n        axisX: {\n          crosshair: {\n            enabled: true,\n            snapToDataPoint: true,\n          },\n          scaleBreaks: {\n            spacing: 0,\n            fillOpacity: 0,\n            lineThickness: 0,\n            customBreaks: stockData.reduce((breaks, value, index, array) => {\n              // Just return on the first iteration\n              // Since there is no previous data point\n              if (index === 0) return breaks;\n\n              // Time in UNIX for current and previous data points\n              const currentDataPointUnix = Number(new Date(value.date));\n              const previousDataPointUnix = Number(\n                new Date(array[index - 1].date)\n              );\n\n              // One day converted to milliseconds\n              const oneDayInMs = 86400000;\n\n              // Difference between the current and previous data points\n              // In milliseconds\n              const difference = previousDataPointUnix - currentDataPointUnix;\n\n              return difference === oneDayInMs\n                ? // Difference is 1 day, no scale break is needed\n                  breaks\n                : // Difference is more than 1 day, need to create\n                  // A new scale break\n                  [\n                    ...breaks,\n                    {\n                      startValue: currentDataPointUnix,\n                      endValue: previousDataPointUnix - oneDayInMs,\n                    },\n                  ];\n            }, []),\n          },\n        },\n        data: [\n          {\n            type: \"candlestick\",\n            dataPoints: stockData.map((stockData) => ({\n              x: new Date(stockData.date),\n              // The OHLC for the data point\n              // The order is IMPORTANT!\n              y: [\n                stockData.open,\n                stockData.high,\n                stockData.low,\n                stockData.close,\n              ],\n            })),\n          },\n        ],\n      }}\n    />\n  );\n};\n\nfunction formatStockData(stockData) {\n  // Convert stockData  to an array of objects\n  console.log(stockData)\n  const dataSet = [];\n  stockData.forEach((item) => {\n    dataSet.push({\n      date: item[0],\n      open: Number(item[1]),\n      high: Number(item[2]),\n      low: Number(item[3]),\n      close: Number(item[4]),\n    });\n  });\n  return dataSet;\n}\n\nexport default Chart;\n","import React, { Fragment, useState } from \"react\";\n\nimport \"./CompanySymbol.css\";\n\nconst formatDate = (dateInput, formatStr) => {\n  const  z = {\n      M: dateInput.getMonth() + 1,\n      d: dateInput.getDate(),\n      h: dateInput.getHours(),\n      m: dateInput.getMinutes(),\n      s: dateInput.getSeconds()\n  };\n  formatStr = formatStr.replace(/(M+|d+|h+|m+|s+)/g, function(v) {\n      return ((v.length > 1 ? \"0\" : \"\") + z[v.slice(-1)]).slice(-2)\n  });\n\n  return formatStr.replace(/(y+)/g, function(v) {\n      return dateInput.getFullYear().toString().slice(-v.length)\n  });\n};\nconst CompanySymbol = (props) => {\n  const [enteredSymbol, setEnteredSymbol] = useState(\"FB\");\n  const [enteredStartDate, setEnteredStartDate] = useState('');\n  const [enteredEndDate, setEnteredEndDate] = useState('');\n\n  const symbolChangeHandler = (event) => {\n    setEnteredSymbol(event.target.value);\n  };\n\n  const startDateChangeHandler = (event) => {\n    setEnteredStartDate(formatDate(new Date(event.target.value),\"yyyy-MM-dd\"))\n  }\n\n  const endDateChangeHandler = (event) => {\n    setEnteredEndDate(formatDate(new Date(event.target.value),\"yyyy-MM-dd\"))\n  }\n  const submitHandler = (event) => {\n    event.preventDefault();\n    console.log(`Input Date: ${enteredSymbol}, ${enteredStartDate}, ${enteredEndDate}`);\n    props.onSubmitSymbol(enteredSymbol, enteredStartDate, enteredEndDate);\n  };\n  return (\n    <Fragment>\n      <form className=\"form-inline\" onSubmit={submitHandler}>\n        <label htmlFor=\"symbol\">Company Symbol:</label>\n        <input\n          type=\"text\"\n          id=\"symbol\"\n          placeholder=\"Enter company Symbol eg. FB for facebook\"\n          onChange={symbolChangeHandler}\n        />\n        <label htmlFor=\"start_date\">Start Date:</label>\n        <input type=\"date\" value={enteredStartDate} id=\"start_date\" placeholder=\"Start Date\" onChange={startDateChangeHandler} />\n\n        <label htmlFor=\"end_date\">End Date:</label>\n        <input type=\"date\" value={enteredEndDate} id=\"end_date\" placeholder=\"End Date\"  onChange={endDateChangeHandler}/>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </Fragment>\n  );\n};\n\n\nexport default CompanySymbol;\n","import React, {useState} from 'react';\nimport Chart from './components/Chart';\nimport CompanySymbol from './components/CompanySymbol'\n\nconst App = () => {\n    const [symbol, setSymbol] = useState('');\n    const [startDate, setStartDate] = useState('');\n    const [endDate, setEndDate] = useState('');\n    const submitSybolHandler = (symbol, startDate, endDate) => {\n        setSymbol(symbol);\n        setStartDate(startDate);\n        setEndDate(endDate);\n        console.log(`Appjs symbol ${symbol}, Start ${startDate}, End ${endDate}`)\n\n    }\n    return (\n        <div style={ { display: 'flex', justifyContent: 'center' } }>\n            <div style={ { width: '80%' } }>\n               <CompanySymbol onSubmitSymbol={submitSybolHandler}/>\n                <Chart symbol={symbol} startDate={startDate} endDate={endDate}/>\n            </div>\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}